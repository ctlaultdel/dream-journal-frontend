{"ast":null,"code":"var _jsxFileName = \"/Users/lollapalarza/ada/projects/smart-dream-journal-frontend/src/components/profile/analyses/barGraph.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { useAuth } from \"../../../contexts/authContext\";\nimport \"./barGraph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarGraph() {\n  _s();\n  const {\n    userEntries\n  } = useAuth();\n\n  // collect dream moods counts for bar graph data\n\n  const data = Object.values(userEntries === null || userEntries === void 0 ? void 0 : userEntries.reduce((a, _ref) => {\n    let {\n      mood\n    } = _ref;\n    a[mood] = a[mood] || {\n      mood: mood,\n      count: 0\n    };\n    a[mood].count++;\n    return a;\n  }, {}));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bar-plot-header\",\n      children: \"Frequency of Dream Moods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 1000,\n      height: 600,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"mood\",\n        style: {\n          fontSize: \"2rem\"\n        },\n        label: {\n          // value: \"Dream Mood Emoji\",\n          // fontSize: \"1.5rem\",\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        style: {\n          fontSize: \"1rem\"\n        },\n        label: {\n          value: \"Number of Dream Mood Entries\",\n          angle: -90,\n          position: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(BarGraph, \"5y8VN+/I4QQbPUs8r65l865LiS4=\", false, function () {\n  return [useAuth];\n});\n_c = BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","useAuth","jsxDEV","_jsxDEV","BarGraph","_s","userEntries","data","Object","values","reduce","a","_ref","mood","count","children","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","style","fontSize","label","value","angle","position","fill","_c","$RefreshReg$"],"sources":["/Users/lollapalarza/ada/projects/smart-dream-journal-frontend/src/components/profile/analyses/barGraph.js"],"sourcesContent":["import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { useAuth } from \"../../../contexts/authContext\";\nimport \"./barGraph.css\";\n\nexport default function BarGraph() {\n  const { userEntries } = useAuth();\n\n  // collect dream moods counts for bar graph data\n\n  const data = Object.values(\n    userEntries?.reduce((a, { mood }) => {\n      a[mood] = a[mood] || { mood: mood, count: 0 };\n      a[mood].count++;\n      return a;\n    }, {})\n  );\n\n  return (\n    <section>\n      <header className=\"bar-plot-header\">Frequency of Dream Moods</header>\n      <BarChart width={1000} height={600} data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"mood\"\n          style={{ fontSize: \"2rem\" }}\n          label={\n            {\n              // value: \"Dream Mood Emoji\",\n              // fontSize: \"1.5rem\",\n            }\n          }\n        />\n        <YAxis\n          style={{ fontSize: \"1rem\" }}\n          label={{\n            value: \"Number of Dream Mood Entries\",\n            angle: -90,\n            position: \"center\",\n          }}\n        />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n      </BarChart>\n    </section>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,OAAO,QAAQ,+BAA+B;AACvD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAY,CAAC,GAAGL,OAAO,EAAE;;EAEjC;;EAEA,MAAMM,IAAI,GAAGC,MAAM,CAACC,MAAM,CACxBH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,MAAM,CAAC,CAACC,CAAC,EAAAC,IAAA,KAAe;IAAA,IAAb;MAAEC;IAAK,CAAC,GAAAD,IAAA;IAC9BD,CAAC,CAACE,IAAI,CAAC,GAAGF,CAAC,CAACE,IAAI,CAAC,IAAI;MAAEA,IAAI,EAAEA,IAAI;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC7CH,CAAC,CAACE,IAAI,CAAC,CAACC,KAAK,EAAE;IACf,OAAOH,CAAC;EACV,CAAC,EAAE,CAAC,CAAC,CAAC,CACP;EAED,oBACER,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQa,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACrEjB,OAAA,CAACT,QAAQ;MAAC2B,KAAK,EAAE,IAAK;MAACC,MAAM,EAAE,GAAI;MAACf,IAAI,EAAEA,IAAK;MAAAQ,QAAA,gBAC7CZ,OAAA,CAACL,aAAa;QAACyB,eAAe,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvCjB,OAAA,CAACP,KAAK;QACJ4B,OAAO,EAAC,MAAM;QACdC,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAC5BC,KAAK,EACH;UACE;UACA;QAAA;MAEH;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACFjB,OAAA,CAACN,KAAK;QACJ4B,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAC5BC,KAAK,EAAE;UACLC,KAAK,EAAE,8BAA8B;UACrCC,KAAK,EAAE,CAAC,EAAE;UACVC,QAAQ,EAAE;QACZ;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACFjB,OAAA,CAACJ,OAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACXjB,OAAA,CAACH,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACVjB,OAAA,CAACR,GAAG;QAAC6B,OAAO,EAAC,OAAO;QAACO,IAAI,EAAC;MAAS;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEd;AAACf,EAAA,CA1CuBD,QAAQ;EAAA,QACNH,OAAO;AAAA;AAAA+B,EAAA,GADT5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
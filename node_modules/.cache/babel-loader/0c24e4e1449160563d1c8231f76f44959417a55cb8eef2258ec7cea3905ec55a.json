{"ast":null,"code":"var _jsxFileName = \"/Users/lollapalarza/ada/projects/smart-dream-journal/smart-dream-journal-frontend/src/components/profile/journal/entries.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/authContext\";\nimport \"./entries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Entries() {\n  _s();\n  // dirty patch for issue with reloading entries after posting a new post\n  const {\n    accessToken,\n    userEntries\n  } = useAuth();\n  if (accessToken) {\n    const entriesList = userEntries === null || userEntries === void 0 ? void 0 : userEntries.map(entry => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            state: entry,\n            to: \"/profile/journal/\" + entry.id,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"font-weight-light\",\n              children: [entry.title, \" \", entry.mood]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: entry.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, entry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"journal-entries-wrapper\",\n      children: entriesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Entries, \"jk9v0YCsm4byy9LWdGO2nnn5b1k=\", false, function () {\n  return [useAuth];\n});\n_c = Entries;\nexport default Entries;\nvar _c;\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"names":["React","Link","useAuth","jsxDEV","_jsxDEV","Entries","_s","accessToken","userEntries","entriesList","map","entry","children","state","to","id","className","title","mood","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["/Users/lollapalarza/ada/projects/smart-dream-journal/smart-dream-journal-frontend/src/components/profile/journal/entries.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/authContext\";\nimport \"./entries.css\";\n\nfunction Entries() {\n  // dirty patch for issue with reloading entries after posting a new post\n  const { accessToken, userEntries } = useAuth();\n\n  if (accessToken) {\n    const entriesList = userEntries?.map((entry) => {\n      return (\n        <section key={entry.id}>\n          <li>\n            <Link state={entry} to={\"/profile/journal/\" + entry.id}>\n              <h1 className=\"font-weight-light\">\n                {entry.title} {entry.mood}\n              </h1>\n              <p>{entry.date}</p>\n            </Link>\n          </li>\n        </section>\n      );\n    });\n    return <ul className=\"journal-entries-wrapper\">{entriesList}</ul>;\n  } else {\n    return <br></br>;\n  }\n}\n\nexport default Entries;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,+BAA+B;AACvD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGN,OAAO,EAAE;EAE9C,IAAIK,WAAW,EAAE;IACf,MAAME,WAAW,GAAGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,GAAG,CAAEC,KAAK,IAAK;MAC9C,oBACEP,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,eACER,OAAA,CAACH,IAAI;YAACY,KAAK,EAAEF,KAAM;YAACG,EAAE,EAAE,mBAAmB,GAAGH,KAAK,CAACI,EAAG;YAAAH,QAAA,gBACrDR,OAAA;cAAIY,SAAS,EAAC,mBAAmB;cAAAJ,QAAA,GAC9BD,KAAK,CAACM,KAAK,EAAC,GAAC,EAACN,KAAK,CAACO,IAAI;YAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACtB,eACLlB,OAAA;cAAAQ,QAAA,EAAID,KAAK,CAACY;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACd;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACJ,GAROX,KAAK,CAACI,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QASZ;IAEd,CAAC,CAAC;IACF,oBAAOlB,OAAA;MAAIY,SAAS,EAAC,yBAAyB;MAAAJ,QAAA,EAAEH;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACnE,CAAC,MAAM;IACL,oBAAOlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAClB;AACF;AAAChB,EAAA,CAvBQD,OAAO;EAAA,QAEuBH,OAAO;AAAA;AAAAsB,EAAA,GAFrCnB,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}